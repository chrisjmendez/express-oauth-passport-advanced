/* ** ** ** ** ** ** **
* App config file
* 
* Since we're using OpenShift for our server, here's a list of 
*	Environmental Variables that will assign the constants below.
*	https://developers.openshift.com/en/managing-environment-variables.html
* 
* 
* Firebase: How does this all work?
* MongoDB is great but Firebase continually proves to be easier to develop and
*	manage, friendlier on the eyes (UIX-wise), and easier to download data and manipulate.
*	The { firebase: null } param is where we store the firebase connection when it's assigned
* 	on /libs/Model.js
*	
* ** ** ** ** ** ** **/
var path     = require('path')
//Path:        /path/to/app.js/from/config/
, rootPath = path.normalize(__dirname + "/../")

module.exports = { 
	//DEVELOPMENT
    development: {
        rootPath: rootPath,
        port:     process.env.PORT || 8080,
        ip:       process.env.HOST || "localhost",
		strategies: {
			google: {
				//Google Config: https://code.google.com/apis/console
				clientID:     '',
				clientSecret: '',
				callbackURL:  'http://localhost:8080/auth/google/callback'
			}, 
			//Twitter Config: https://apps.twitter.com
			twitter: {
				consumerKey: '',
				consumerSecret: '',
				callbackURL: 'http://localhost:8080/auth/twitter/callback',
				passReqToCallback: true
			},
			//Facebook Config: https://developers.facebook.com/apps
			facebook: {
				clientID: '',
				clientSecret: '',
				callbackURL:  'http://localhost:8080/auth/facebook/callback',
				passReqToCallback: true
			},
			//https://github.com/settings/applications
			github: {
				clientID: "",
				clientSecret: "",
				callbackURL:  'http://localhost:8080/auth/github/callback'
			},
			//https://developer.linkedin.com/
			linkedin: {
				consumerKey: "",
				consumerSecret: "",
				callbackURL:  'http://localhost:8080/auth/linkedin/callback',
				profileFields: [ 'email-addresses', 'first-name', 'last-name', 'headline', 
								'location', 'industry', 'num-connections', 'num-connections-capped', 
								'specialties', 'positions', 'picture-url', 'picture-urls::(original)']
			}
		}
    },
	//PRODUCTION
    production: {
        rootPath: rootPath,
        port:     process.env.OPENSHIFT_NODEJS_PORT || 80,
        ip  :     process.env.OPENSHIFT_NODEJS_IP,
		strategies: {
			//Google Config: https://code.google.com/apis/console
			google: {
				clientID:     '',
				clientSecret: '',
				callbackURL:  rootPath + '/auth/google/callback'
			},
			//Twitter Config: https://apps.twitter.com
			twitter: {
				consumerKey: '',
				consumerSecret: '',
				callbackURL: rootPath + '/twitter/callback',
				passReqToCallback: true
			},
			//Facebook Config: https://developers.facebook.com/apps
			facebook: {
				clientID: '',
				clientSecret: '',
				callbackURL:  rootPath + '/auth/facebook/callback',
				passReqToCallback: true
			},
			//https://github.com/settings/applications
			github: {
				clientID: "",
				clientSecret: "",
				callbackURL:  'http://localhost:8080/auth/github/callback'
			},
			//https://developer.linkedin.com/
			linkedin: {
				consumerKey: "",
				consumerSecret: "",
				callbackURL:  'http://localhost:8080/auth/linkedin/callback',
				profileFields: [ 'email-addresses', 'first-name', 'last-name', 'headline', 
								'location', 'industry', 'num-connections', 'num-connections-capped', 
								'specialties', 'positions', 'picture-url', 'picture-urls::(original)']
			}
		}
    }
 }
 